
==================== FINAL INTERFACE ====================
2017-10-24 19:28:39.629146 UTC

interface arserber-0.1.0.0-JNz71AlQYinIvoesE5TPIM:Lib [family instance module] 8002
  interface hash: 57951a595e2a2480e0de02f6e9d3158a
  ABI hash: c48e8ad318521e3d135de532d23660c6
  export-list hash: 6576500d11da17467c13473156b6ba24
  orphan hash: 300d640b85a29e94ab0c01d4d9dfc591
  flag hash: de8b543d1185f7dc66fdcf3d2c5e412a
  sig of: Nothing
  used TH splices: False
  where
exports:
  Lib.webserver
module dependencies:
package dependencies: aeson-1.1.2.0@aeson-1.1.2.0-7ssY6fy1GxZGXxTPcOtf2k
                      appar-0.1.4@appar-0.1.4-DGWHHt2WRn9FI49prcwO9
                      array-0.5.1.1@array-0.5.1.1
                      asn1-encoding-0.9.5@asn1-encoding-0.9.5-3JZC4dAP31k7Q4fTrrlkWA
                      asn1-parse-0.9.4@asn1-parse-0.9.4-9XvgyGGIiMnCuFxJliO52Q
                      asn1-types-0.3.2@asn1-types-0.3.2-27z7eaijBfO5HoyMnNZM7Q
                      async-2.1.1.1@async-2.1.1.1-8yywY4inVGRLJSCg60gBXj
                      attoparsec-0.13.1.0@attoparsec-0.13.1.0-3ql4hcH9pGfBAlE21oqFTQ
                      auto-update-0.1.4@auto-update-0.1.4-EmUvNdmhEju51bHrtaEMpz
                      base-4.9.1.0
                      base-compat-0.9.3@base-compat-0.9.3-KeJp8zYMpcS9WibvTcxU22
                      base64-bytestring-1.0.0.1@base64-bytestring-1.0.0.1-4O9TExPPz6eI82Yj7L4SIj
                      basement-0.0.3@basement-0.0.3-9VABBoFJLfV9rowquvHEzl
                      binary-0.8.3.0@binary-0.8.3.0
                      blaze-builder-0.4.0.2@blaze-builder-0.4.0.2-LxClHUTiKUUAxWtvJ5Oeoy
                      blaze-html-0.9.0.1@blaze-html-0.9.0.1-GQ0yZtPYt2i2KdgnUEOA8p
                      blaze-markup-0.8.0.0@blaze-markup-0.8.0.0-GsxkVbRgODkgUQDmmDVob
                      byteable-0.1.1@byteable-0.1.1-2lU1pexQSLj1KbNO17UifQ
                      byteorder-1.0.4@byteorder-1.0.4-9NlNHkBVdo7F1prFVKrkcH
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      case-insensitive-1.2.0.10@case-insensitive-1.2.0.10-1D5OUKQ7UrJ7IpOe0di4Un
                      cereal-0.5.4.0@cereal-0.5.4.0-BsAGxfp8yAs3CiRo2E875e
                      conduit-1.2.12.1@conduit-1.2.12.1-CTYKTJmwFo81r4LrAKDD8i
                      conduit-extra-1.1.17@conduit-extra-1.1.17-LHyPtC0nGlzDcgVxOcd4h4
                      connection-0.2.8@connection-0.2.8-BxEaNY3oDHHAFXlQHNmyac
                      containers-0.5.7.1@containers-0.5.7.1
                      cookie-0.4.2.1@cookie-0.4.2.1-ImqC1hbvUERAwQQgqhuUAD
                      cryptonite-0.23@cryptonite-0.23-55TM7xoZVZb4nKMzQwVdg8
                      data-default-0.7.1.1@data-default-0.7.1.1-Atv1ZD6t1rI1MrH9qSGaQC
                      data-default-class-0.1.2.0@data-default-class-0.1.2.0-GsXqKN6o1X9jr0fF5qCVD
                      data-default-instances-containers-0.0.1@data-default-instances-containers-0.0.1-bob6IQGdJq92c061H46zK
                      data-default-instances-dlist-0.0.1@data-default-instances-dlist-0.0.1-LBT1sjxIvyd63eC0aI9yNO
                      data-default-instances-old-locale-0.0.1@data-default-instances-old-locale-0.0.1-9zaGDEmgOixKkmLylWdN5l
                      deepseq-1.4.2.0@deepseq-1.4.2.0 directory-1.3.0.0@directory-1.3.0.0
                      dlist-0.8.0.3@dlist-0.8.0.3-BHFBNaw8k6n9WiaUNzoXpk
                      exceptions-0.8.3@exceptions-0.8.3-ADEDRATtUrMK1JW4zMQ9U
                      filepath-1.4.1.1@filepath-1.4.1.1
                      foundation-0.0.16@foundation-0.0.16-COExPNsqFDVHjuiyp4aaDi
                      ghc-boot-th-8.0.2@ghc-boot-th-8.0.2 ghc-prim-0.5.0.0
                      hashable-1.2.6.1@hashable-1.2.6.1-2ZLNuHq395GGIHwEHuqZol
                      hourglass-0.2.10@hourglass-0.2.10-pnbvWmzfcY1rOFETQEmcY
                      html-conduit-1.2.1.2@html-conduit-1.2.1.2-BCcD0wiOf9uBU2RYXz77LX
                      http-client-0.5.7.0@http-client-0.5.7.0-ZH40bByQedKxMmMnUi42q
                      http-client-tls-0.3.5.1@http-client-tls-0.3.5.1-81lPTBgWF2b3hrysMx7QeM
                      http-conduit-2.2.3.2@http-conduit-2.2.3.2-J1poNKxRebN1aUrWodELHw
                      http-date-0.0.6.1@http-date-0.0.6.1-AkYFHBFn90lGSerD29arC9
                      http-types-0.9.1@http-types-0.9.1-G7E1zHPzooHCYxKqGuQmxY
                      http2-1.6.3@http2-1.6.3-5WuWRsIVuKR43Sq9Cs2O4Z integer-gmp-1.0.0.1
                      integer-logarithms-1.0.2@integer-logarithms-1.0.2-92lMiWV9mmYAwfMEYgfQ0D
                      iproute-1.7.1@iproute-1.7.1-EJjAtfniBUorobFQnk7lR
                      lifted-base-0.2.3.11@lifted-base-0.2.3.11-Ei0JSPdt7KOCD2HIA5jFqV
                      memory-0.14.8@memory-0.14.8-IRCH9pn6TWc7UN52YzPheg
                      mmorph-1.0.9@mmorph-1.0.9-5bASEvmIkr5CpdAYXwPsn0
                      monad-control-1.0.2.2@monad-control-1.0.2.2-1Ci8dYJ8Tb7E3HTcTqOb8l
                      mtl-2.2.1@mtl-2.2.1-BLKBelFsPB3BoFeSWSOYj6
                      network-2.6.3.2@network-2.6.3.2-IsLM4TXcLoRI0fmmBYVyQz
                      network-uri-2.6.1.0@network-uri-2.6.1.0-7BN1tbB3iHQ2XgvmqLAYph
                      old-locale-1.0.0.7@old-locale-1.0.0.7-KGBP1BSKxH5GCm0LnZP04j
                      parsec-3.1.11@parsec-3.1.11-1aqiimsgq2dCv7eoaC8WuX
                      pem-0.2.2@pem-0.2.2-CkEwei5500yF2642aAaOAi
                      primitive-0.6.2.0@primitive-0.6.2.0-4578caNkWQ54Gt1mxLF2Yh
                      process-1.4.3.0@process-1.4.3.0
                      psqueues-0.2.4.0@psqueues-0.2.4.0-CvAhEbuBRGQCwl61vq8zYS
                      rake-0.0.1@rake-0.0.1-BMtdKLUyjniArqToxlin8G
                      random-1.1@random-1.1-9tceXaeYIMZ4JrKq20Egog
                      regex-base-0.93.2@regex-base-0.93.2-AYjYAsBidAc8f5XNm9b2Aa
                      regex-compat-0.95.1@regex-compat-0.95.1-7IGKoiHTSKL3opdpEZ0pO8
                      regex-posix-0.95.2@regex-posix-0.95.2-KQJt29lnRa45d6bFn9XkFO
                      resourcet-1.1.9@resourcet-1.1.9-L2BUQrxWZMwDiwhcuyPuNi
                      scientific-0.3.5.2@scientific-0.3.5.2-FM2NdrNTcdbCDq9wuNnhIA
                      scotty-0.11.0@scotty-0.11.0-A0Fu08UQDtq1x6NLBiRRmh
                      simple-sendfile-0.2.25@simple-sendfile-0.2.25-4uYtK5a0djFILo2ePfLs47
                      socks-0.5.5@socks-0.5.5-JArtPcFTnbCItWBjXwWAhO
                      stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve
                      streaming-commons-0.1.17@streaming-commons-0.1.17-6xuIA5RXrs65yyeq3HWIWP
                      stringsearch-0.3.6.6@stringsearch-0.3.6.6-2soGORichTR6reHVhDqKip
                      tagged-0.8.5@tagged-0.8.5-1mTloBSoUxv8dqUr8XBGBt
                      tagstream-conduit-0.5.5.3@tagstream-conduit-0.5.5.3-9gPxrWaj5QO7dMo1XBDrZK
                      template-haskell-2.11.1.0
                      text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00
                      time-1.6.0.1@time-1.6.0.1
                      time-locale-compat-0.1.1.3@time-locale-compat-0.1.1.3-KZ1jqNx8uhlHjmuPPj6V1Y
                      tls-1.3.11@tls-1.3.11-BpYxhFBGI0n4tqBeLF41FB
                      transformers-0.5.2.0@transformers-0.5.2.0
                      transformers-base-0.4.4@transformers-base-0.4.4-GKSs0LKukAL8ymq2naFmrH
                      unix-2.7.2.1@unix-2.7.2.1
                      unix-compat-0.4.3.1@unix-compat-0.4.3.1-Ausmw6d7KIwA7sl52mzqxC
                      unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-Bp9XgxjuHxcI4tFehVMDGC
                      uuid-types-1.0.3@uuid-types-1.0.3-HQOuja9trySCcuflACyDTJ
                      vault-0.3.0.7@vault-0.3.0.7-FSJCPczyPWW8DwvwP76qt4
                      vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ
                      wai-3.2.1.1@wai-3.2.1.1-GYhAFGd1F2uKjCUZVPyC2C
                      wai-extra-3.0.20.0@wai-extra-3.0.20.0-Dj9t4P11I8BnwNE6pZcEP
                      warp-3.2.13@warp-3.2.13-FhWulh599WH9bUCGJnpWGc
                      word8-0.1.3@word8-0.1.3-9o1uWQQ6KysJq8GGsVHHit
                      x509-1.7.2@x509-1.7.2-AilHX1GjrAbCJUwtI8WXS0
                      x509-store-1.6.5@x509-store-1.6.5-WTaXlBJAY3Bm7PwlD1b5q
                      x509-system-1.6.6@x509-system-1.6.6-16rFc17BfryDvkjE7AyWAW
                      x509-validation-1.6.9@x509-validation-1.6.9-FZEOZ1QDIbu3PthUBHKmRi
                      xml-conduit-1.5.1@xml-conduit-1.5.1-FiRHhqSLReR4vkwAA3escx
                      xml-types-0.3.6@xml-types-0.3.6-BlXpqWNn2ZGFM9gCBPuBeT
                      zlib-0.6.1.2@zlib-0.6.1.2-7negTfm2ujt1gW4wr40MUp
orphans: attoparsec-0.13.1.0@attoparsec-0.13.1.0-3ql4hcH9pGfBAlE21oqFTQ:Data.Attoparsec.ByteString.Char8
         attoparsec-0.13.1.0@attoparsec-0.13.1.0-3ql4hcH9pGfBAlE21oqFTQ:Data.Attoparsec.Text.Internal
         base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         basement-0.0.3@basement-0.0.3-9VABBoFJLfV9rowquvHEzl:Basement.Block
         basement-0.0.3@basement-0.0.3-9VABBoFJLfV9rowquvHEzl:Basement.UArray
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         data-default-instances-containers-0.0.1@data-default-instances-containers-0.0.1-bob6IQGdJq92c061H46zK:Data.Default.Instances.Containers
         data-default-instances-dlist-0.0.1@data-default-instances-dlist-0.0.1-LBT1sjxIvyd63eC0aI9yNO:Data.Default.Instances.DList
         data-default-instances-old-locale-0.0.1@data-default-instances-old-locale-0.0.1-9zaGDEmgOixKkmLylWdN5l:Data.Default.Instances.OldLocale
         hashable-1.2.6.1@hashable-1.2.6.1-2ZLNuHq395GGIHwEHuqZol:Data.Hashable.Generic
         http-client-0.5.7.0@http-client-0.5.7.0-ZH40bByQedKxMmMnUi42q:Network.HTTP.Client.Request
         network-2.6.3.2@network-2.6.3.2-IsLM4TXcLoRI0fmmBYVyQz:Network.Socket
         regex-base-0.93.2@regex-base-0.93.2-AYjYAsBidAc8f5XNm9b2Aa:Text.Regex.Base.Context
         regex-posix-0.95.2@regex-posix-0.95.2-KQJt29lnRa45d6bFn9XkFO:Text.Regex.Posix.ByteString
         regex-posix-0.95.2@regex-posix-0.95.2-KQJt29lnRa45d6bFn9XkFO:Text.Regex.Posix.ByteString.Lazy
         regex-posix-0.95.2@regex-posix-0.95.2-KQJt29lnRa45d6bFn9XkFO:Text.Regex.Posix.Sequence
         regex-posix-0.95.2@regex-posix-0.95.2-KQJt29lnRa45d6bFn9XkFO:Text.Regex.Posix.String
         stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve:Control.Monad.STM
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Lazy
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Show
         time-1.6.0.1@time-1.6.0.1:Data.Time.Calendar.Gregorian
         time-1.6.0.1@time-1.6.0.1:Data.Time.Format.Parse
         time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Fusion.Bundle
         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Unboxed
family instance modules: attoparsec-0.13.1.0@attoparsec-0.13.1.0-3ql4hcH9pGfBAlE21oqFTQ:Data.Attoparsec.Internal.Types
                         base-4.9.1.0:Control.Applicative base-4.9.1.0:Data.Complex
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Compose
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.Functor.Product base-4.9.1.0:Data.Functor.Sum
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         basement-0.0.3@basement-0.0.3-9VABBoFJLfV9rowquvHEzl:Basement.Block.Base
                         basement-0.0.3@basement-0.0.3-9VABBoFJLfV9rowquvHEzl:Basement.BoxedArray
                         basement-0.0.3@basement-0.0.3-9VABBoFJLfV9rowquvHEzl:Basement.Monad
                         basement-0.0.3@basement-0.0.3-9VABBoFJLfV9rowquvHEzl:Basement.MutableBuilder
                         basement-0.0.3@basement-0.0.3-9VABBoFJLfV9rowquvHEzl:Basement.NonEmpty
                         basement-0.0.3@basement-0.0.3-9VABBoFJLfV9rowquvHEzl:Basement.Numerical.Subtractive
                         basement-0.0.3@basement-0.0.3-9VABBoFJLfV9rowquvHEzl:Basement.String
                         basement-0.0.3@basement-0.0.3-9VABBoFJLfV9rowquvHEzl:Basement.String.Encoding.ASCII7
                         basement-0.0.3@basement-0.0.3-9VABBoFJLfV9rowquvHEzl:Basement.String.Encoding.ISO_8859_1
                         basement-0.0.3@basement-0.0.3-9VABBoFJLfV9rowquvHEzl:Basement.String.Encoding.UTF16
                         basement-0.0.3@basement-0.0.3-9VABBoFJLfV9rowquvHEzl:Basement.String.Encoding.UTF32
                         basement-0.0.3@basement-0.0.3-9VABBoFJLfV9rowquvHEzl:Basement.Types.AsciiString
                         basement-0.0.3@basement-0.0.3-9VABBoFJLfV9rowquvHEzl:Basement.Types.OffsetSize
                         basement-0.0.3@basement-0.0.3-9VABBoFJLfV9rowquvHEzl:Basement.UArray.Base
                         basement-0.0.3@basement-0.0.3-9VABBoFJLfV9rowquvHEzl:Basement.UTF8.Base
                         conduit-1.2.12.1@conduit-1.2.12.1-CTYKTJmwFo81r4LrAKDD8i:Data.Conduit.Internal.Conduit
                         conduit-1.2.12.1@conduit-1.2.12.1-CTYKTJmwFo81r4LrAKDD8i:Data.Conduit.Internal.Pipe
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         dlist-0.8.0.3@dlist-0.8.0.3-BHFBNaw8k6n9WiaUNzoXpk:Data.DList
                         foundation-0.0.16@foundation-0.0.16-COExPNsqFDVHjuiyp4aaDi:Foundation.Array.Bitmap
                         foundation-0.0.16@foundation-0.0.16-COExPNsqFDVHjuiyp4aaDi:Foundation.Array.Chunked.Unboxed
                         foundation-0.0.16@foundation-0.0.16-COExPNsqFDVHjuiyp4aaDi:Foundation.Collection.Buildable
                         foundation-0.0.16@foundation-0.0.16-COExPNsqFDVHjuiyp4aaDi:Foundation.Collection.Element
                         foundation-0.0.16@foundation-0.0.16-COExPNsqFDVHjuiyp4aaDi:Foundation.Collection.Keyed
                         foundation-0.0.16@foundation-0.0.16-COExPNsqFDVHjuiyp4aaDi:Foundation.Collection.Mutable
                         foundation-0.0.16@foundation-0.0.16-COExPNsqFDVHjuiyp4aaDi:Foundation.Tuple
                         ghc-boot-th-8.0.2@ghc-boot-th-8.0.2:GHC.LanguageExtensions.Type
                         http-client-0.5.7.0@http-client-0.5.7.0-ZH40bByQedKxMmMnUi42q:Network.HTTP.Client
                         iproute-1.7.1@iproute-1.7.1-EJjAtfniBUorobFQnk7lR:Data.IP.Addr
                         iproute-1.7.1@iproute-1.7.1-EJjAtfniBUorobFQnk7lR:Data.IP.Range
                         monad-control-1.0.2.2@monad-control-1.0.2.2-1Ci8dYJ8Tb7E3HTcTqOb8l:Control.Monad.Trans.Control
                         network-uri-2.6.1.0@network-uri-2.6.1.0-7BN1tbB3iHQ2XgvmqLAYph:Network.URI
                         primitive-0.6.2.0@primitive-0.6.2.0-4578caNkWQ54Gt1mxLF2Yh:Control.Monad.Primitive
                         primitive-0.6.2.0@primitive-0.6.2.0-4578caNkWQ54Gt1mxLF2Yh:Data.Primitive.Array
                         resourcet-1.1.9@resourcet-1.1.9-L2BUQrxWZMwDiwhcuyPuNi:Control.Monad.Trans.Resource.Internal
                         scotty-0.11.0@scotty-0.11.0-A0Fu08UQDtq1x6NLBiRRmh:Web.Scotty.Internal.Types
                         tagged-0.8.5@tagged-0.8.5-1mTloBSoUxv8dqUr8XBGBt:Data.Tagged
                         template-haskell-2.11.1.0:Language.Haskell.TH.Syntax
                         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text
                         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Lazy
                         unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-Bp9XgxjuHxcI4tFehVMDGC:Data.HashMap.Base
                         unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-Bp9XgxjuHxcI4tFehVMDGC:Data.HashSet
                         uuid-types-1.0.3@uuid-types-1.0.3-HQOuja9trySCcuflACyDTJ:Data.UUID.Types.Internal
                         uuid-types-1.0.3@uuid-types-1.0.3-HQOuja9trySCcuflACyDTJ:Data.UUID.Types.Internal.Builder
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Primitive
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Storable
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Unboxed
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Unboxed.Base
                         xml-types-0.3.6@xml-types-0.3.6-BlXpqWNn2ZGFM9gCBPuBeT:Data.XML.Types
                         zlib-0.6.1.2@zlib-0.6.1.2-7negTfm2ujt1gW4wr40MUp:Codec.Compression.Zlib.Stream
import  -/  aeson-1.1.2.0@aeson-1.1.2.0-7ssY6fy1GxZGXxTPcOtf2k:Data.Aeson 1af00541e969ad203c27ee12864de00d
import  -/  aeson-1.1.2.0@aeson-1.1.2.0-7ssY6fy1GxZGXxTPcOtf2k:Data.Aeson.Types.FromJSON f51fffb1f8daae31daf33b152fc89c41
import  -/  aeson-1.1.2.0@aeson-1.1.2.0-7ssY6fy1GxZGXxTPcOtf2k:Data.Aeson.Types.ToJSON d6ae344f2a743c9940980d0869569ad4
import  -/  base-4.9.1.0:Control.Monad a6784c5dab0d75c63dabec5a37843f98
import  -/  base-4.9.1.0:Data.Maybe d876c4ffe4b3c43755a781e8ad860d88
import  -/  base-4.9.1.0:Data.Monoid 51cc9cd8c130d49ba96b7c2c2406022b
import  -/  base-4.9.1.0:Data.Tuple 7dc4bbb45d2e69c991ffac438beeca11
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.Generics 1dbec2bc7dd1c5bd8c89ed857eaed19b
import  -/  base-4.9.1.0:GHC.List ab8c4e523e6c479c549d3bcd5fc4a439
import  -/  base-4.9.1.0:GHC.Show a027f5ac24879eaba752f44aa90fe511
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  conduit-1.2.12.1@conduit-1.2.12.1-CTYKTJmwFo81r4LrAKDD8i:Data.Conduit e37e3b3c37f0a79a3bd28700740fa42a
import  -/  conduit-1.2.12.1@conduit-1.2.12.1-CTYKTJmwFo81r4LrAKDD8i:Data.Conduit.Internal.Conduit 5901f43a48365d209ff472acd16cd768
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
import  -/  ghc-prim-0.5.0.0:GHC.Types 89f8de4f08018c9177c98d979eae0e45
import  -/  html-conduit-1.2.1.2@html-conduit-1.2.1.2-BCcD0wiOf9uBU2RYXz77LX:Text.HTML.DOM d6369b4035f4f9f3d674de617a45dd00
import  -/  http-client-0.5.7.0@http-client-0.5.7.0-ZH40bByQedKxMmMnUi42q:Network.HTTP.Client.Manager 9ffbded39af32129e169bfdde312254b
import  -/  http-client-0.5.7.0@http-client-0.5.7.0-ZH40bByQedKxMmMnUi42q:Network.HTTP.Client.Request f014140f539ecc2afa284b048312987a
import  -/  http-client-0.5.7.0@http-client-0.5.7.0-ZH40bByQedKxMmMnUi42q:Network.HTTP.Client.Types e3c95aac8fd116f4198e1bd968b0272c
import  -/  http-client-tls-0.3.5.1@http-client-tls-0.3.5.1-81lPTBgWF2b3hrysMx7QeM:Network.HTTP.Client.TLS b8c94408555c2f18600255e6abe1a7e0
import  -/  http-conduit-2.2.3.2@http-conduit-2.2.3.2-J1poNKxRebN1aUrWodELHw:Network.HTTP.Conduit 6192f20f1d688e44365b590838053713
import  -/  rake-0.0.1@rake-0.0.1-BMtdKLUyjniArqToxlin8G:NLP.RAKE.Text f748a38bb91855b594a464386b8e9abd
import  -/  resourcet-1.1.9@resourcet-1.1.9-L2BUQrxWZMwDiwhcuyPuNi:Control.Monad.Trans.Resource 1359c7a5bd2b9f29c684f5f903dcf722
import  -/  scotty-0.11.0@scotty-0.11.0-A0Fu08UQDtq1x6NLBiRRmh:Web.Scotty 70da7210031d087dfb32c3ca6064cc39
import  -/  text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text f7d3d648ffeef1043fe2e522e7e66c1b
import  -/  text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Internal 9bfcbbbe07ecef48f631025a838df7da
import  -/  text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Lazy cbb4b05939f62bb9d21b1d5ed2b9d95e
import  -/  xml-conduit-1.5.1@xml-conduit-1.5.1-FiRHhqSLReR4vkwAA3escx:Text.XML 95721897865aacbe287fe7dfd994a89c
import  -/  xml-conduit-1.5.1@xml-conduit-1.5.1-FiRHhqSLReR4vkwAA3escx:Text.XML.Cursor 05f4a63dfc871f4b5730877af23bdafc
import  -/  xml-conduit-1.5.1@xml-conduit-1.5.1-FiRHhqSLReR4vkwAA3escx:Text.XML.Cursor.Generic e21772362f373635c09c9ecb28c33fd6
6e5ba411e2db6ed635d17df556d30bdb
  $fFromJSONKeywords ::
    Data.Aeson.Types.FromJSON.FromJSON Lib.Keywords
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Lib.Keywords
                  Lib.$fFromJSONKeywords_$cparseJSON
                  Lib.$fFromJSONKeywords_$cparseJSONList -}
6e5ba411e2db6ed635d17df556d30bdb
  $fFromJSONKeywords1 ::
    [Data.Aeson.Types.Internal.Parser Lib.Keywords]
    -> forall (f :: * -> *) r.
       Data.Aeson.Types.Internal.JSONPath
       -> Data.Aeson.Types.Internal.Failure f r
       -> Data.Aeson.Types.Internal.Success [Lib.Keywords] f r
       -> f r
  {- Arity: 4, HasNoCafRefs, Strictness: <S,1*U><L,U><L,U><L,C(U)> -}
c2e0919a75ec28b7641d66dab7dd7b9a
  $fFromJSONKeywords2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "[a]"#) -}
79ce6a045a1fc272edc54293bbad9824
  $fFromJSONKeywords3 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         (GHC.Generics.M1
            GHC.Generics.D
            ('GHC.Generics.MetaData
               "Keywords"
               "Lib"
               "arserber-0.1.0.0-JNz71AlQYinIvoesE5TPIM"
               'GHC.Types.False)
            (GHC.Generics.M1
               GHC.Generics.C
               ('GHC.Generics.MetaCons
                  "Keywords" 'GHC.Generics.PrefixI 'GHC.Types.True)
               (GHC.Generics.S1
                  ('GHC.Generics.MetaSel
                     ('GHC.Base.Just "keywords")
                     'GHC.Generics.NoSourceUnpackedness
                     'GHC.Generics.NoSourceStrictness
                     'GHC.Generics.DecidedLazy)
                  (GHC.Generics.Rec0 [Data.Text.Internal.Text])))
            a1)
  {- Arity: 3, Strictness: <L,1*U(U,U,U,U,U,U)><L,U><L,U>,
     Unfolding: (\ @ a1
                   (opts :: Data.Aeson.Types.Internal.Options)
                   (fargs :: Data.Aeson.Types.FromJSON.FromArgs
                               Data.Aeson.Types.Generic.Zero a1)
                   (x :: Data.Aeson.Types.Internal.Value) ->
                 let {
                   m :: Data.Aeson.Types.Internal.Parser
                          (GHC.Generics.M1
                             GHC.Generics.S
                             ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "keywords")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.Rec0 [Data.Text.Internal.Text])
                             a1)
                   = case opts of wild { Data.Aeson.Types.Internal.Options ds1 ds2 ds3 ds4 ds5 ds6 ->
                     case ds6 of wild1 {
                       GHC.Types.False
                       -> case x of wild2 {
                            DEFAULT
                            -> Data.Aeson.Types.FromJSON.typeMismatch
                                 @ (GHC.Generics.M1
                                      GHC.Generics.S
                                      ('GHC.Generics.MetaSel
                                         ('GHC.Base.Just "keywords")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.Rec0 [Data.Text.Internal.Text])
                                      a1)
                                 Data.Aeson.Types.FromJSON.$fConsFromJSON'TYPEarityfTrue1
                                 wild2
                            Data.Aeson.Types.Internal.Object obj
                            -> Data.Aeson.Types.FromJSON.$fFromRecordarityM10_$cparseRecord
                                 @ ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "keywords")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                 @ Data.Aeson.Types.Generic.Zero
                                 @ (GHC.Generics.K1 GHC.Generics.R [Data.Text.Internal.Text])
                                 Lib.$fFromJSONKeywords_$s$fSelectorMetaMetaSel
                                 Lib.$fFromJSONKeywords4
                                   `cast`
                                 (Sym (Data.Aeson.Types.FromJSON.N:GFromJSON[0]
                                           <Data.Aeson.Types.Generic.Zero>_N
                                           <GHC.Generics.K1
                                              GHC.Generics.R [Data.Text.Internal.Text]>_N))
                                 @ a1
                                 wild
                                 fargs
                                 (GHC.Base.Nothing @ Data.Text.Internal.Text)
                                 obj }
                       GHC.Types.True
                       -> case Data.Aeson.Types.Internal.$sfromList1
                                 @ Data.Aeson.Types.Internal.Value
                                 (GHC.Types.:
                                    @ Data.Aeson.Types.Internal.Pair
                                    (Data.Aeson.Types.FromJSON.$fConsFromJSONarityf2, x)
                                    (GHC.Types.[] @ Data.Aeson.Types.Internal.Pair))
                                 (Data.HashMap.Base.Empty
                                    @ Data.Text.Internal.Text
                                    @ Data.Aeson.Types.Internal.Value) of dt { DEFAULT ->
                          Data.Aeson.Types.FromJSON.$fFromRecordarityM10_$cparseRecord
                            @ ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "keywords")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                            @ Data.Aeson.Types.Generic.Zero
                            @ (GHC.Generics.K1 GHC.Generics.R [Data.Text.Internal.Text])
                            Lib.$fFromJSONKeywords_$s$fSelectorMetaMetaSel
                            Lib.$fFromJSONKeywords4
                              `cast`
                            (Sym (Data.Aeson.Types.FromJSON.N:GFromJSON[0]
                                      <Data.Aeson.Types.Generic.Zero>_N
                                      <GHC.Generics.K1 GHC.Generics.R [Data.Text.Internal.Text]>_N))
                            @ a1
                            wild
                            fargs
                            Data.Aeson.Types.FromJSON.$fConsFromJSONarityf1
                            dt } } }
                 } in
                 (\ @ (f4 :: * -> *)
                    @ r
                    (path :: Data.Aeson.Types.Internal.JSONPath)
                    (kf :: Data.Aeson.Types.Internal.Failure f4 r)
                    (ks :: Data.Aeson.Types.Internal.Success
                             (GHC.Generics.M1
                                GHC.Generics.D
                                ('GHC.Generics.MetaData
                                   "Keywords"
                                   "Lib"
                                   "arserber-0.1.0.0-JNz71AlQYinIvoesE5TPIM"
                                   'GHC.Types.False)
                                (GHC.Generics.M1
                                   GHC.Generics.C
                                   ('GHC.Generics.MetaCons
                                      "Keywords" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                   (GHC.Generics.S1
                                      ('GHC.Generics.MetaSel
                                         ('GHC.Base.Just "keywords")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.Rec0 [Data.Text.Internal.Text])))
                                a1)
                             f4
                             r) ->
                  m `cast`
                  (Data.Aeson.Types.Internal.N:Parser[0]
                       <GHC.Generics.M1
                          GHC.Generics.S
                          ('GHC.Generics.MetaSel
                             ('GHC.Base.Just "keywords")
                             'GHC.Generics.NoSourceUnpackedness
                             'GHC.Generics.NoSourceStrictness
                             'GHC.Generics.DecidedLazy)
                          (GHC.Generics.Rec0 [Data.Text.Internal.Text])
                          a1>_R)
                    @ f4
                    @ r
                    path
                    kf
                    (\ (a2 :: GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "keywords")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 [Data.Text.Internal.Text])
                                a1) ->
                     ks
                       a2
                         `cast`
                       (Trans
                            (Sym (GHC.Generics.N:M1[0]
                                      <GHC.Generics.C>_P
                                      <'GHC.Generics.MetaCons
                                         "Keywords" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                      <GHC.Generics.M1
                                         GHC.Generics.S
                                         ('GHC.Generics.MetaSel
                                            ('GHC.Base.Just "keywords")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy)
                                         (GHC.Generics.Rec0 [Data.Text.Internal.Text])>_R))
                            (Sym (GHC.Generics.N:M1[0]
                                      <GHC.Generics.D>_P
                                      <'GHC.Generics.MetaData
                                         "Keywords"
                                         "Lib"
                                         "arserber-0.1.0.0-JNz71AlQYinIvoesE5TPIM"
                                         'GHC.Types.False>_P
                                      <GHC.Generics.M1
                                         GHC.Generics.C
                                         ('GHC.Generics.MetaCons
                                            "Keywords" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                         (GHC.Generics.S1
                                            ('GHC.Generics.MetaSel
                                               ('GHC.Base.Just "keywords")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.Rec0
                                               [Data.Text.Internal.Text]))>_R)) <a1>_N)))
                   `cast`
                 (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                           <GHC.Generics.M1
                              GHC.Generics.D
                              ('GHC.Generics.MetaData
                                 "Keywords"
                                 "Lib"
                                 "arserber-0.1.0.0-JNz71AlQYinIvoesE5TPIM"
                                 'GHC.Types.False)
                              (GHC.Generics.M1
                                 GHC.Generics.C
                                 ('GHC.Generics.MetaCons
                                    "Keywords" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                 (GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "keywords")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 [Data.Text.Internal.Text])))
                              a1>_R))) -}
5ab007bb1ab6b56fb4648151fb56fca3
  $fFromJSONKeywords4 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         (GHC.Generics.K1 GHC.Generics.R [Data.Text.Internal.Text] a1)
  {- Arity: 3, Strictness: <L,A><L,A><L,U>,
     Unfolding: InlineRule (3, True, True)
                (\ @ a1
                   (w1 :: Data.Aeson.Types.Internal.Options)
                   (w2 :: Data.Aeson.Types.FromJSON.FromArgs
                            Data.Aeson.Types.Generic.Zero a1)
                   (w3 :: Data.Aeson.Types.Internal.Value) ->
                 Data.Aeson.Types.FromJSON.$w$cgParseJSON2
                   @ [Data.Text.Internal.Text]
                   @ Data.Aeson.Types.Generic.Zero
                   @ GHC.Generics.R
                   Lib.$fFromJSONKeywords_$s$fFromJSON[]
                   @ a1
                   w3) -}
b13729b670fefe58e256cc9ce71a89d9
  $fFromJSONKeywords5 ::
    GHC.Generics.SingI ('GHC.Base.Just "keywords")
  {- Unfolding: InlineRule (0, True, True)
                Lib.$fFromJSONKeywords6
                  `cast`
                (Trans
                     (Sym (GHC.Generics.D:R:SingMaybeb0[0] <GHC.Types.Symbol>_N))
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Base.Maybe
                                                       GHC.Types.Symbol>_N) <'GHC.Base.Just
                                                                               "keywords">_N) -}
ba5f227f4c4c39b9b370fb4161d5a357
  $fFromJSONKeywords6 ::
    GHC.Generics.R:SingMaybeb
      GHC.Types.Symbol ('GHC.Base.Just "keywords")
  {- Unfolding: (GHC.Generics.SJust
                   @ GHC.Types.Symbol
                   @ ('GHC.Base.Just "keywords")
                   @ "keywords"
                   @~ <'GHC.Base.Just "keywords">_N
                   Lib.$fFromJSONKeywords7
                     `cast`
                   (Sym (GHC.Generics.D:R:SingSymbols0[0]) <"keywords">_N)) -}
bc50213882a4a10cb89236756048964a
  $fFromJSONKeywords7 :: GHC.Generics.R:SingSymbols "keywords"
  {- Strictness: m,
     Unfolding: (GHC.Generics.SSym
                   @ "keywords"
                   Lib.$fFromJSONKeywords8
                     `cast`
                   (Trans
                        (Sym (GHC.TypeLits.N:SSymbol[0] <"keywords">_P))
                        (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"keywords">_N))) -}
67a87aee019e232464d49d3f72bcd7c5
  $fFromJSONKeywords8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "keywords"#) -}
6e5ba411e2db6ed635d17df556d30bdb
  $fFromJSONKeywords_$cparseJSON ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser Lib.Keywords
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (x :: Data.Aeson.Types.Internal.Value) ->
                 let {
                   m :: Data.Aeson.Types.Internal.Parser
                          (GHC.Generics.M1
                             GHC.Generics.D
                             ('GHC.Generics.MetaData
                                "Keywords"
                                "Lib"
                                "arserber-0.1.0.0-JNz71AlQYinIvoesE5TPIM"
                                'GHC.Types.False)
                             (GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "Keywords" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                (GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "keywords")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 [Data.Text.Internal.Text])))
                             GHC.Prim.Any)
                   = Lib.$fFromJSONKeywords3
                       @ GHC.Prim.Any
                       Data.Aeson.Types.Internal.defaultOptions
                       (Data.Aeson.Types.FromJSON.$WNoFromArgs @ GHC.Prim.Any)
                       x
                 } in
                 (\ @ (f4 :: * -> *)
                    @ r
                    (path :: Data.Aeson.Types.Internal.JSONPath)
                    (kf :: Data.Aeson.Types.Internal.Failure f4 r)
                    (ks :: Data.Aeson.Types.Internal.Success Lib.Keywords f4 r) ->
                  m `cast`
                  (Data.Aeson.Types.Internal.N:Parser[0]
                       (Sub (Sym (Lib.Rep_Keywords[0])) <GHC.Prim.Any>_N))
                    @ f4
                    @ r
                    path
                    kf
                    (\ (a1 :: GHC.Generics.Rep Lib.Keywords GHC.Prim.Any) ->
                     ks
                       (Lib.Keywords
                          a1
                            `cast`
                          (Trans
                               (Trans
                                    (Sub (Lib.Rep_Keywords[0]))
                                    (Trans
                                         (GHC.Generics.N:M1[0]
                                              <GHC.Generics.D>_P
                                              <'GHC.Generics.MetaData
                                                 "Keywords"
                                                 "Lib"
                                                 "arserber-0.1.0.0-JNz71AlQYinIvoesE5TPIM"
                                                 'GHC.Types.False>_P
                                              <GHC.Generics.M1
                                                 GHC.Generics.C
                                                 ('GHC.Generics.MetaCons
                                                    "Keywords"
                                                    'GHC.Generics.PrefixI
                                                    'GHC.Types.True)
                                                 (GHC.Generics.M1
                                                    GHC.Generics.S
                                                    ('GHC.Generics.MetaSel
                                                       ('GHC.Base.Just "keywords")
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy)
                                                    (GHC.Generics.K1
                                                       GHC.Generics.R
                                                       [Data.Text.Internal.Text]))>_R)
                                         (Trans
                                              (GHC.Generics.N:M1[0]
                                                   <GHC.Generics.C>_P
                                                   <'GHC.Generics.MetaCons
                                                      "Keywords"
                                                      'GHC.Generics.PrefixI
                                                      'GHC.Types.True>_P
                                                   <GHC.Generics.M1
                                                      GHC.Generics.S
                                                      ('GHC.Generics.MetaSel
                                                         ('GHC.Base.Just "keywords")
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy)
                                                      (GHC.Generics.K1
                                                         GHC.Generics.R
                                                         [Data.Text.Internal.Text])>_R)
                                              (GHC.Generics.N:M1[0]
                                                   <GHC.Generics.S>_P
                                                   <'GHC.Generics.MetaSel
                                                      ('GHC.Base.Just "keywords")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy>_P
                                                   <GHC.Generics.K1
                                                      GHC.Generics.R
                                                      [Data.Text.Internal.Text]>_R))) <GHC.Prim.Any>_N)
                               (GHC.Generics.N:K1[0]
                                    <GHC.Generics.R>_P
                                    <[Data.Text.Internal.Text]>_R
                                    <GHC.Prim.Any>_P)))))
                   `cast`
                 (Sym (Data.Aeson.Types.Internal.N:Parser[0] <Lib.Keywords>_R))) -}
6e5ba411e2db6ed635d17df556d30bdb
  $fFromJSONKeywords_$cparseJSONList ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser [Lib.Keywords]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds :: Data.Aeson.Types.Internal.Value) ->
                 case ds of wild {
                   DEFAULT
                   -> Data.Aeson.Types.FromJSON.typeMismatch
                        @ [Lib.Keywords]
                        Lib.$fFromJSONKeywords2
                        wild
                   Data.Aeson.Types.Internal.Array a1
                   -> case a1 of wild1 { Data.Vector.Vector dt dt1 dt2 ->
                      (Lib.$fFromJSONKeywords1
                         (letrec {
                            $wgo1 :: GHC.Prim.Int# -> [Data.Aeson.Types.Internal.Value]
                              {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
                            = \ (ww :: GHC.Prim.Int#) ->
                              case GHC.Prim.tagToEnum#
                                     @ GHC.Types.Bool
                                     (GHC.Prim.>=# ww dt1) of wild2 {
                                GHC.Types.False
                                -> case GHC.Prim.indexArray#
                                          @ Data.Aeson.Types.Internal.Value
                                          dt2
                                          (GHC.Prim.+# dt ww) of ds1 { Unit# ipv ->
                                   GHC.Types.:
                                     @ Data.Aeson.Types.Internal.Value
                                     ipv
                                     ($wgo1 (GHC.Prim.+# ww 1#)) }
                                GHC.Types.True -> GHC.Types.[] @ Data.Aeson.Types.Internal.Value }
                          } in
                          Lib.$fFromJSONKeywords_go 0# ($wgo1 0#)))
                        `cast`
                      (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                <[Lib.Keywords]>_R)) } }) -}
f380749531ef4e3fe82d0bf7d653d192
  $fFromJSONKeywords_$s$fFromJSON[] ::
    Data.Aeson.Types.FromJSON.FromJSON [Data.Text.Internal.Text]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ [Data.Text.Internal.Text]
                  (Data.Aeson.Types.FromJSON.$dmfromJSONKeyList_$cparseJSON
                     @ Data.Text.Internal.Text
                     Data.Aeson.Types.FromJSON.$fFromJSONText0)
                  (Data.Aeson.Types.FromJSON.$fFromJSONKey[]_$cparseJSONList
                     @ Data.Text.Internal.Text
                     Data.Aeson.Types.FromJSON.$fFromJSONText0) -}
a0dc4e1ca86908bc21d62ce2f7020e88
  $fFromJSONKeywords_$s$fSelectorMetaMetaSel ::
    GHC.Generics.Selector
      ('GHC.Generics.MetaSel
         ('GHC.Base.Just "keywords")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaSel
                       ('GHC.Base.Just "keywords")
                       'GHC.Generics.NoSourceUnpackedness
                       'GHC.Generics.NoSourceStrictness
                       'GHC.Generics.DecidedLazy)
                  Lib.$fFromJSONKeywords_$s$fSelectorMetaMetaSel_$cselName
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceUnpackedness
                     @ ('GHC.Base.Just "keywords")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Lib.$fFromJSONKeywords5
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceStrictness
                     @ ('GHC.Base.Just "keywords")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Lib.$fFromJSONKeywords5
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselDecidedStrictness
                     @ ('GHC.Base.Just "keywords")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Lib.$fFromJSONKeywords5
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N)) -}
6c8845106fd3d837263c29629f3b1ce2
  $fFromJSONKeywords_$s$fSelectorMetaMetaSel_$cselName ::
    forall k (t :: GHC.Generics.Meta
                   -> (GHC.Types.* -> GHC.Types.*) -> k -> *) (f :: GHC.Types.*
                                                                    -> GHC.Types.*) (a :: k).
    t ('GHC.Generics.MetaSel
         ('GHC.Base.Just "keywords")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy) f a
    -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ @ k
                   @ (t :: GHC.Generics.Meta
                           -> (GHC.Types.* -> GHC.Types.*) -> k -> *)
                   @ (f :: GHC.Types.* -> GHC.Types.*)
                   @ (a :: k)
                   (ds1 :: t ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "keywords")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy) f a) ->
                 Lib.$fFromJSONKeywords8) -}
6e5ba411e2db6ed635d17df556d30bdb
  $fFromJSONKeywords_go ::
    GHC.Prim.Int#
    -> [Data.Aeson.Types.Internal.Value]
    -> [Data.Aeson.Types.Internal.Parser Lib.Keywords]
  {- Arity: 2, Strictness: <L,U><S,1*U> -}
6e5ba411e2db6ed635d17df556d30bdb
  $fGenericKeywords :: GHC.Generics.Generic Lib.Keywords
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Lib.Keywords
                  Lib.$fGenericKeywords_$cfrom
                  Lib.$fGenericKeywords_$cto -}
6e5ba411e2db6ed635d17df556d30bdb
  $fGenericKeywords1 ::
    Lib.Keywords
    -> GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Keywords" 'GHC.Generics.PrefixI 'GHC.Types.True)
         (GHC.Generics.M1
            GHC.Generics.S
            ('GHC.Generics.MetaSel
               ('GHC.Base.Just "keywords")
               'GHC.Generics.NoSourceUnpackedness
               'GHC.Generics.NoSourceStrictness
               'GHC.Generics.DecidedLazy)
            (GHC.Generics.K1 GHC.Generics.R [Data.Text.Internal.Text]))
         x
  {- Arity: 1, HasNoCafRefs, Strictness: <S(S),1*U(1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (x1 :: Lib.Keywords) ->
                 case x1 of wild { Lib.Keywords g1 ->
                 g1
                   `cast`
                 (Trans
                      (Sym (GHC.Generics.N:K1[0]
                                <GHC.Generics.R>_P <[Data.Text.Internal.Text]>_R <x>_P))
                      (Trans
                           (Sym (GHC.Generics.N:M1[0]
                                     <GHC.Generics.S>_P
                                     <'GHC.Generics.MetaSel
                                        ('GHC.Base.Just "keywords")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy>_P
                                     <GHC.Generics.K1 GHC.Generics.R [Data.Text.Internal.Text]>_R))
                           (Sym (GHC.Generics.N:M1[0]
                                     <GHC.Generics.C>_P
                                     <'GHC.Generics.MetaCons
                                        "Keywords" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                     <GHC.Generics.M1
                                        GHC.Generics.S
                                        ('GHC.Generics.MetaSel
                                           ('GHC.Base.Just "keywords")
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy)
                                        (GHC.Generics.K1
                                           GHC.Generics.R
                                           [Data.Text.Internal.Text])>_R)) <x>_N)) }) -}
6e5ba411e2db6ed635d17df556d30bdb
  $fGenericKeywords_$cfrom ::
    Lib.Keywords -> GHC.Generics.Rep Lib.Keywords x
  {- Arity: 1, HasNoCafRefs, Strictness: <S(S),1*U(1*U)>,
     Unfolding: InlineRule (0, True, True)
                Lib.$fGenericKeywords1
                  `cast`
                (forall (x :: <GHC.Types.*>_N).
                 <Lib.Keywords>_R
                 ->_R Trans
                          (Sym (GHC.Generics.N:M1[0]
                                    <GHC.Generics.D>_P
                                    <'GHC.Generics.MetaData
                                       "Keywords"
                                       "Lib"
                                       "arserber-0.1.0.0-JNz71AlQYinIvoesE5TPIM"
                                       'GHC.Types.False>_P
                                    <GHC.Generics.M1
                                       GHC.Generics.C
                                       ('GHC.Generics.MetaCons
                                          "Keywords" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                       (GHC.Generics.M1
                                          GHC.Generics.S
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Base.Just "keywords")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.K1
                                             GHC.Generics.R [Data.Text.Internal.Text]))>_R))
                          (Sub (Sym (Lib.Rep_Keywords[0]))) <x>_N) -}
6e5ba411e2db6ed635d17df556d30bdb
  $fGenericKeywords_$cto ::
    GHC.Generics.Rep Lib.Keywords x -> Lib.Keywords
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>m,
     Unfolding: InlineRule (1, True, True)
                (\ @ x (ds :: GHC.Generics.Rep Lib.Keywords x) ->
                 Lib.Keywords
                   ds
                     `cast`
                   (Trans
                        (Trans
                             (Sub (Lib.Rep_Keywords[0]))
                             (Trans
                                  (GHC.Generics.N:M1[0]
                                       <GHC.Generics.D>_P
                                       <'GHC.Generics.MetaData
                                          "Keywords"
                                          "Lib"
                                          "arserber-0.1.0.0-JNz71AlQYinIvoesE5TPIM"
                                          'GHC.Types.False>_P
                                       <GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "Keywords" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                          (GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Base.Just "keywords")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.K1
                                                GHC.Generics.R [Data.Text.Internal.Text]))>_R)
                                  (Trans
                                       (GHC.Generics.N:M1[0]
                                            <GHC.Generics.C>_P
                                            <'GHC.Generics.MetaCons
                                               "Keywords" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                            <GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "keywords")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1
                                                  GHC.Generics.R [Data.Text.Internal.Text])>_R)
                                       (GHC.Generics.N:M1[0]
                                            <GHC.Generics.S>_P
                                            <'GHC.Generics.MetaSel
                                               ('GHC.Base.Just "keywords")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy>_P
                                            <GHC.Generics.K1
                                               GHC.Generics.R [Data.Text.Internal.Text]>_R))) <x>_N)
                        (GHC.Generics.N:K1[0]
                             <GHC.Generics.R>_P <[Data.Text.Internal.Text]>_R <x>_P))) -}
6e5ba411e2db6ed635d17df556d30bdb
  $fShowKeywords :: GHC.Show.Show Lib.Keywords
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Lib.Keywords
                  Lib.$fShowKeywords_$cshowsPrec
                  Lib.$fShowKeywords_$cshow
                  Lib.$fShowKeywords_$cshowList -}
6e5ba411e2db6ed635d17df556d30bdb
  $fShowKeywords1 :: Lib.Keywords -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (\ (w :: Lib.Keywords) (w1 :: GHC.Base.String) ->
                 case w of ww { Lib.Keywords ww1 ->
                 Lib.$w$cshowsPrec 0# ww1 w1 }) -}
dd2c9ffc60a83af4a7632d816b91281e
  $fShowKeywords2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "}"#) -}
0089c191854c3af240b29934b67cb6c4
  $fShowKeywords3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "keywords = "#) -}
0903dd6e9d5e08014c7cd96d2c4c3a20
  $fShowKeywords4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Keywords {"#) -}
6e5ba411e2db6ed635d17df556d30bdb
  $fShowKeywords_$cshow :: Lib.Keywords -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Lib.Keywords) ->
                 Lib.$fShowKeywords_$cshowsPrec
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
6e5ba411e2db6ed635d17df556d30bdb
  $fShowKeywords_$cshowList :: [Lib.Keywords] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Lib.Keywords
                   Lib.$fShowKeywords1) -}
6e5ba411e2db6ed635d17df556d30bdb
  $fShowKeywords_$cshowsPrec ::
    GHC.Types.Int -> Lib.Keywords -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S(S),1*U(U)><S,1*U(1*U)><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Lib.Keywords)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Lib.Keywords ww3 ->
                 Lib.$w$cshowsPrec ww1 ww3 w2 } }) -}
6e5ba411e2db6ed635d17df556d30bdb
  $fToJSONKeywords :: Data.Aeson.Types.ToJSON.ToJSON Lib.Keywords
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Lib.Keywords
                  Lib.$fToJSONKeywords_$ctoJSON
                  Lib.$fToJSONKeywords_$ctoEncoding
                  Lib.$fToJSONKeywords_$ctoJSONList
                  Lib.$fToJSONKeywords_$ctoEncodingList -}
6e5ba411e2db6ed635d17df556d30bdb
  $fToJSONKeywords1 ::
    Lib.Keywords
    -> Data.Tagged.Tagged
         Data.Aeson.Types.Generic.True Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <L,1*U(1*U)>m1, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Lib.Keywords) ->
                 case Lib.$w$dRecordToPairs
                        @ GHC.Prim.Any
                        Lib.$fToJSONKeywords2
                        (case w of wild { Lib.Keywords g1 ->
                         g1
                           `cast`
                         (Trans
                              (Sym (GHC.Generics.N:K1[0]
                                        <GHC.Generics.R>_P
                                        <[Data.Text.Internal.Text]>_R
                                        <GHC.Prim.Any>_P))
                              (Sym (GHC.Generics.N:M1[0]
                                        <GHC.Generics.S>_P
                                        <'GHC.Generics.MetaSel
                                           ('GHC.Base.Just "keywords")
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy>_P
                                        <GHC.Generics.K1
                                           GHC.Generics.R
                                           [Data.Text.Internal.Text]>_R) <GHC.Prim.Any>_N)) })
                        (GHC.Types.[]
                           @ Data.Aeson.Types.Internal.Pair) of ww { (#,#) ww1 ww2 ->
                 case Data.Aeson.Types.Internal.$sfromList1
                        @ Data.Aeson.Types.Internal.Value
                        (GHC.Types.:
                           @ (Data.Text.Internal.Text, Data.Aeson.Types.Internal.Value)
                           ww1
                           ww2)
                        (Data.HashMap.Base.Empty
                           @ Data.Text.Internal.Text
                           @ Data.Aeson.Types.Internal.Value) of dt1 { DEFAULT ->
                 (Data.Aeson.Types.Internal.Object dt1)
                   `cast`
                 (Sym (Data.Tagged.N:Tagged[0]
                           <*>_N
                           <Data.Aeson.Types.Generic.True>_P
                           <Data.Aeson.Types.Internal.Value>_R)) } }) -}
0abf05f6ddf0c42ac695d4527eab6b72
  $fToJSONKeywords2 :: Data.Aeson.Types.Internal.Options
  {- Unfolding: (Data.Aeson.Types.Internal.Options
                   (GHC.Base.id @ GHC.Base.String)
                   (GHC.Base.id @ GHC.Base.String)
                   GHC.Types.True
                   GHC.Types.False
                   Data.Aeson.Types.Internal.defaultTaggedObject
                   GHC.Types.False) -}
a346929601313daecf481094bc872a04
  $fToJSONKeywords3 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 0#) -}
e86b08bb990edf41cd3e8936337ba302
  $fToJSONKeywords4 ::
    GHC.Types.SPEC
    -> (Data.Vector.Generic.Base.Mutable
          Data.Vector.Vector
          (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
          Data.Aeson.Types.Internal.Value,
        GHC.Types.Int)
    -> [Data.Aeson.Types.Internal.Value]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Data.Vector.Generic.Base.Mutable
             Data.Vector.Vector
             (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
             Data.Aeson.Types.Internal.Value,
           GHC.Types.Int) #)
  {- Arity: 4, Strictness: <S,1*U><L,U(U(U,U,U),U(U))><S,1*U><S,U> -}
6e5ba411e2db6ed635d17df556d30bdb
  $fToJSONKeywords_$ctoEncoding ::
    Lib.Keywords -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Strictness: <L,1*U(1*U)>, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: Lib.Keywords) ->
                 Data.Aeson.Encoding.Internal.value
                   (Lib.$fToJSONKeywords_$ctoJSON eta)) -}
6e5ba411e2db6ed635d17df556d30bdb
  $fToJSONKeywords_$ctoEncodingList ::
    [Lib.Keywords] -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Strictness: <S,1*U>, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: [Lib.Keywords]) ->
                 case eta of wild {
                   [] -> Data.Aeson.Encoding.Internal.emptyArray_
                   : x xs
                   -> (Data.ByteString.Builder.Internal.append
                         (Data.Aeson.Encoding.Internal.openBracket
                            @ Data.Aeson.Types.Internal.Value)
                           `cast`
                         (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                              <Data.Aeson.Types.Internal.Value>_P)
                         (Data.ByteString.Builder.Internal.append
                            (Data.Aeson.Encoding.Internal.value
                               (Lib.$fToJSONKeywords_$ctoJSON x))
                              `cast`
                            (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                 <Data.Aeson.Types.Internal.Value>_P)
                            (Data.ByteString.Builder.Internal.append
                               (GHC.Base.foldr
                                  @ Lib.Keywords
                                  @ (Data.Aeson.Encoding.Internal.Encoding'
                                       Data.Aeson.Types.Internal.Value)
                                  (\ (v :: Lib.Keywords)
                                     (vs :: Data.Aeson.Encoding.Internal.Encoding'
                                              Data.Aeson.Types.Internal.Value)[OneShot] ->
                                   Data.ByteString.Builder.Internal.append
                                     (Data.Aeson.Encoding.Internal.comma
                                        @ Data.Aeson.Types.Internal.Value)
                                       `cast`
                                     (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                          <Data.Aeson.Types.Internal.Value>_P)
                                     (Data.ByteString.Builder.Internal.append
                                        (Data.Aeson.Encoding.Internal.value
                                           (Lib.$fToJSONKeywords_$ctoJSON v))
                                          `cast`
                                        (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                             <Data.Aeson.Types.Internal.Value>_P)
                                        vs
                                          `cast`
                                        (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                             <Data.Aeson.Types.Internal.Value>_P)))
                                    `cast`
                                  (<Lib.Keywords>_R
                                   ->_R <Data.Aeson.Encoding.Internal.Encoding'
                                           Data.Aeson.Types.Internal.Value>_R
                                   ->_R Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                 <Data.Aeson.Types.Internal.Value>_P))
                                  (Data.Aeson.Encoding.Internal.empty
                                     @ Data.Aeson.Types.Internal.Value)
                                  xs)
                                 `cast`
                               (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                    <Data.Aeson.Types.Internal.Value>_P)
                               (Data.Aeson.Encoding.Internal.closeBracket
                                  @ Data.Aeson.Types.Internal.Value)
                                 `cast`
                               (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                    <Data.Aeson.Types.Internal.Value>_P))))
                        `cast`
                      (Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                <Data.Aeson.Types.Internal.Value>_P)) }) -}
6e5ba411e2db6ed635d17df556d30bdb
  $fToJSONKeywords_$ctoJSON ::
    Lib.Keywords -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <L,1*U(1*U)>m1,
     Unfolding: InlineRule (0, True, True)
                Lib.$fToJSONKeywords1
                  `cast`
                (<Lib.Keywords>_R
                 ->_R Data.Tagged.N:Tagged[0]
                          <*>_N
                          <Data.Aeson.Types.Generic.True>_P
                          <Data.Aeson.Types.Internal.Value>_R) -}
6e5ba411e2db6ed635d17df556d30bdb
  $fToJSONKeywords_$ctoJSONList ::
    [Lib.Keywords] -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U>m2, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: [Lib.Keywords]) ->
                 case Data.Vector.Generic.new
                        @ Data.Vector.Vector
                        @ Data.Aeson.Types.Internal.Value
                        (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                        (Data.Vector.Generic.New.unstream
                           @ Data.Vector.Vector
                           @ Data.Aeson.Types.Internal.Value
                           (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                           (Data.Vector.Fusion.Bundle.Monadic.unsafeFromList
                              @ Data.Vector.Fusion.Util.Id
                              @ Data.Aeson.Types.Internal.Value
                              @ Data.Vector.Vector
                              Data.Vector.Fusion.Util.$fMonadId
                              Data.Vector.Fusion.Bundle.Size.Unknown
                              (GHC.Base.build
                                 @ Data.Aeson.Types.Internal.Value
                                 (\ @ b1
                                    (c :: Data.Aeson.Types.Internal.Value -> b1 -> b1)[OneShot]
                                    (n :: b1)[OneShot] ->
                                  GHC.Base.foldr
                                    @ Lib.Keywords
                                    @ b1
                                    (GHC.Base.mapFB
                                       @ Data.Aeson.Types.Internal.Value
                                       @ b1
                                       @ Lib.Keywords
                                       c
                                       Lib.$fToJSONKeywords_$ctoJSON)
                                    n
                                    eta)))) of dt1 { Data.Vector.Vector ipv ipv1 ipv2 ->
                 Data.Aeson.Types.Internal.Array dt1 }) -}
ea779854cf9cf1ee68dc29c0fcc11987
  $s$$+-1 ::
    GHC.Base.Monad
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Lib.$s$$+-_$s$fMonadResourceT -}
c8d48f21383e3a44b34415f37ffb825b
  $s$$+-_$dApplicative :: GHC.Base.Applicative GHC.Types.IO
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True) GHC.Base.$fApplicativeIO -}
b48b317f7573ae52400ae0899d765ee0
  $s$$+-_$dFunctor :: GHC.Base.Functor GHC.Types.IO
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True) GHC.Base.$fFunctorIO -}
39a4d1823307f06825bc168ef5ae1212
  $s$$+-_$s$fApplicativeResourceT ::
    GHC.Base.Applicative
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                  Lib.$s$$+-_$s$fApplicativeResourceT_$cp1Applicative
                  Lib.$s$$+-_$s$fApplicativeResourceT_$cpure
                  (Control.Monad.Trans.Resource.Internal.$fApplicativeResourceT_$c<*>
                     @ GHC.Types.IO
                     Lib.$s$$+-_$dApplicative)
                  (Control.Monad.Trans.Resource.Internal.$fApplicativeResourceT_$c*>
                     @ GHC.Types.IO
                     Lib.$s$$+-_$dApplicative)
                  (Control.Monad.Trans.Resource.Internal.$fApplicativeResourceT_$c<*
                     @ GHC.Types.IO
                     Lib.$s$$+-_$dApplicative) -}
f2bce07f2678ad41a1a0e71ed4443bc0
  $s$$+-_$s$fApplicativeResourceT_$cp1Applicative ::
    GHC.Base.Functor
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Lib.$s$$+-_$s$fFunctorResourceT -}
e19ac800568a3719a74496fa7f451475
  $s$$+-_$s$fApplicativeResourceT_$cpure ::
    a -> Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U><L,A><S,U>,
     Unfolding: InlineRule (1, True, True)
                (\ @ a
                   (eta :: a)
                   (eta1 :: GHC.IORef.IORef
                              Control.Monad.Trans.Resource.Internal.ReleaseMap)
                   (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (GHC.Base.returnIO @ a eta) `cast` (GHC.Types.N:IO[0] <a>_R) eta2)
                  `cast`
                (forall (a :: <*>_N).
                 <a>_R
                 ->_R Trans
                          (<GHC.IORef.IORef
                              Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                           ->_R Sym (GHC.Types.N:IO[0] <a>_R))
                          (Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                    <GHC.Types.IO>_R <a>_N))) -}
c8258676cc8b302d6bd92d72d7ebe8ad
  $s$$+-_$s$fFunctorResourceT ::
    GHC.Base.Functor
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                  (Control.Monad.Trans.Resource.Internal.$fFunctorResourceT_$cfmap
                     @ GHC.Types.IO
                     Lib.$s$$+-_$dFunctor)
                  (Control.Monad.Trans.Resource.Internal.$fFunctorResourceT_$c<$
                     @ GHC.Types.IO
                     Lib.$s$$+-_$dFunctor) -}
1557d3b7de68a0946a41dc33d07ff2f6
  $s$$+-_$s$fMonadResourceT ::
    GHC.Base.Monad
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                  Lib.$s$$+-_$s$fMonadResourceT_$cp1Monad
                  (Control.Monad.Trans.Resource.Internal.$fMonadResourceT_$c>>=
                     @ GHC.Types.IO
                     GHC.Base.$fMonadIO)
                  (Control.Monad.Trans.Resource.Internal.$fMonadResourceT_$c>>
                     @ GHC.Types.IO
                     GHC.Base.$fMonadIO)
                  Lib.$s$$+-_$s$fApplicativeResourceT_$cpure
                  Lib.$s$$+-_$s$fMonadResourceT_$cfail -}
248498753dbe28af266500550075ccd5
  $s$$+-_$s$fMonadResourceT_$cfail ::
    GHC.Base.String
    -> Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a
  {- Arity: 1, Strictness: <B,U>x,
     Unfolding: InlineRule (1, True, False)
                (\ @ a (eta :: GHC.Base.String) ->
                 Control.Monad.Trans.Resource.Internal.$fMonadResourceT1
                   @ GHC.Types.IO
                   @ a
                   GHC.Base.$fMonadIO
                   eta) -}
b24b9b96cb2164a0e59b54e9d68029d4
  $s$$+-_$s$fMonadResourceT_$cp1Monad ::
    GHC.Base.Applicative
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Lib.$s$$+-_$s$fApplicativeResourceT -}
5efeed670bfd086e509c7a75e7e38da7
  $s$fMonadBasebResourceT ::
    Control.Monad.Base.MonadBase
      GHC.Types.IO
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Types.IO
                  @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                  GHC.Base.$fApplicativeIO
                  Lib.$s$$+-_$s$fMonadResourceT_$cp1Monad
                  GHC.Base.$fMonadIO
                  Lib.$s$$+-1
                  Lib.$s$fMonadBasebResourceT_$s$fMonadIOResourceT_$cliftIO -}
a6654cb41a807b022d1021a850074ff2
  $s$fMonadBasebResourceT_$s$fMonadIOResourceT_$cliftIO ::
    GHC.Types.IO a
    -> Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,A>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a (eta :: GHC.Types.IO a) ->
                 let {
                   eta1 :: GHC.Types.IO a = GHC.Base.id @ (GHC.Types.IO a) eta
                 } in
                 (\ (ds :: GHC.IORef.IORef
                             Control.Monad.Trans.Resource.Internal.ReleaseMap) ->
                  eta1)
                   `cast`
                 (Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                           <GHC.Types.IO>_R <a>_N))) -}
e6a9359f6f777e211bfbe7b48b7ebcc1
  $s$fMonadIOResourceT ::
    Control.Monad.IO.Class.MonadIO
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                  Lib.$s$$+-1
                  Lib.$s$fMonadBasebResourceT_$s$fMonadIOResourceT_$cliftIO -}
f47adc77fa2d4a6cf14e0421e7a11b8b
  $s$fMonadResourceResourceT ::
    Control.Monad.Trans.Resource.Internal.MonadResource
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                  Lib.$s$fMonadResourceResourceT_$s$fMonadResourceResourceT_$cp1MonadResource
                  Lib.$s$fMonadResourceResourceT_$s$fMonadResourceResourceT_$cp2MonadResource
                  Lib.$s$$+-_$s$fMonadResourceT_$cp1Monad
                  Lib.$s$fMonadResourceResourceT_$s$fMonadResourceResourceT_$cp4MonadResource
                  (Control.Monad.Trans.Resource.Internal.$fMonadResourceResourceT_$cliftResourceT
                     @ GHC.Types.IO
                     Control.Monad.Catch.$fMonadThrowIO
                     Control.Monad.Base.$fMonadBaseIOIO
                     Control.Monad.IO.Class.$fMonadIOIO
                     GHC.Base.$fApplicativeIO) -}
17c9b23f4e35147ba01da4a4849836f8
  $s$fMonadResourceResourceT_$s$fMonadResourceResourceT_$cp1MonadResource ::
    Control.Monad.Catch.MonadThrow
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Lib.$s$fMonadResourceResourceT_$s$fMonadThrowResourceT -}
63448105225a83d46e03e753178c95c2
  $s$fMonadResourceResourceT_$s$fMonadResourceResourceT_$cp2MonadResource ::
    Control.Monad.IO.Class.MonadIO
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True) Lib.$s$fMonadIOResourceT -}
02adb6ba8e71fa711dd1aa4272fe6969
  $s$fMonadResourceResourceT_$s$fMonadResourceResourceT_$cp4MonadResource ::
    Control.Monad.Base.MonadBase
      GHC.Types.IO
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Lib.$s$fMonadBasebResourceT -}
a5c67b9044fb6c0da01457752ea32002
  $s$fMonadResourceResourceT_$s$fMonadThrowResourceT ::
    Control.Monad.Catch.MonadThrow
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                  Lib.$s$$+-1
                  Lib.$s$fMonadResourceResourceT_$s$fMonadThrowResourceT_$cthrowM -}
f51e7ca8759c35a6cd1e54ac994b24b6
  $s$fMonadResourceResourceT_$s$fMonadThrowResourceT_$cthrowM ::
    GHC.Exception.Exception e =>
    e -> Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a
  {- Arity: 4, HasNoCafRefs,
     Strictness: <B,1*U(A,A,1*C1(U),A,A)><B,U><B,A><B,U>x,
     Unfolding: InlineRule (1, True, True)
                (\ @ e
                   @ a
                   (eta :: GHC.Exception.Exception e)
                   (x :: e)
                   (eta1 :: GHC.IORef.IORef
                              Control.Monad.Trans.Resource.Internal.ReleaseMap)
                   (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (GHC.IO.throwIO @ e @ a eta x) `cast` (GHC.Types.N:IO[0] <a>_R)
                   eta2)
                  `cast`
                (forall (e :: <*>_N) (a :: <*>_N).
                 <GHC.Exception.Exception e>_R
                 ->_R <e>_R
                 ->_R Trans
                          (<GHC.IORef.IORef
                              Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                           ->_R Sym (GHC.Types.N:IO[0] <a>_R))
                          (Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                    <GHC.Types.IO>_R <a>_N))) -}
d4f9d369eea3343336f417bfe1aace5f
  $tc'Keywords :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16023070251733603140##
                   13958364483938131456##
                   Lib.$trModule
                   Lib.$tc'Keywords1) -}
2007614c84afc279da1f82d1be29abf8
  $tc'Keywords1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Keywords"#) -}
d9ca167783cd0e0493374f8c1ae9f58a
  $tcKeywords :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   18143531113935875731##
                   740336861941056613##
                   Lib.$trModule
                   Lib.$tcKeywords1) -}
b7fee757a7f34cdf5f0421c72319f791
  $tcKeywords1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Keywords"#) -}
fd69a4c7b8c07d0d2c1b1f58a6d6f2ab
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Lib.$trModule2 Lib.$trModule1) -}
6c51cf56fe97674026086ff4f7666318
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Lib"#) -}
31f367296b7b8eb69d401bcef03ec713
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "arserber-0.1.0.0-JNz71AlQYinIvoesE5TPIM"#) -}
f8976fb89df8b3a84d8b626e28f0eae5
  $w$cshowsPrec ::
    GHC.Prim.Int#
    -> [Data.Text.Internal.Text] -> GHC.Base.String -> GHC.Base.String
  {- Arity: 3, Strictness: <S,U><L,1*U><L,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: [Data.Text.Internal.Text])
                   (w :: GHC.Base.String) ->
                 let {
                   p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,1*U> -}
                   = \ (x :: GHC.Base.String)[OneShot] ->
                     GHC.Base.++
                       @ GHC.Types.Char
                       Lib.$fShowKeywords4
                       (GHC.Base.++
                          @ GHC.Types.Char
                          Lib.$fShowKeywords3
                          (let {
                             s :: GHC.Base.String
                             = GHC.Base.++ @ GHC.Types.Char Lib.$fShowKeywords2 x
                           } in
                           case ww1 of wild {
                             [] -> GHC.CString.unpackAppendCString# "[]"# s
                             : x1 xs
                             -> GHC.Types.:
                                  @ GHC.Types.Char
                                  GHC.Show.showList__2
                                  (Data.Text.Show.$fShowText1
                                     x1
                                     (let {
                                        lvl50 :: [GHC.Types.Char]
                                        = GHC.Types.: @ GHC.Types.Char GHC.Show.showList__1 s
                                      } in
                                      letrec {
                                        showl :: [Data.Text.Internal.Text] -> GHC.Base.String
                                          {- Arity: 1, Strictness: <S,1*U> -}
                                        = \ (ds2 :: [Data.Text.Internal.Text]) ->
                                          case ds2 of wild1 {
                                            [] -> lvl50
                                            : y ys
                                            -> GHC.Types.:
                                                 @ GHC.Types.Char
                                                 GHC.Show.shows5
                                                 (Data.Text.Show.$fShowText1 y (showl ys)) }
                                      } in
                                      showl xs)) }))
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 11#) of wild {
                   GHC.Types.False -> p w
                   GHC.Types.True
                   -> GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.shows7
                        (p (GHC.Types.: @ GHC.Types.Char GHC.Show.shows4 w)) }) -}
c17e85a8f1b947e67d3507541fadcba7
  $w$dRecordToPairs ::
    Data.Aeson.Types.Internal.Options
    -> GHC.Generics.S1
         ('GHC.Generics.MetaSel
            ('GHC.Base.Just "keywords")
            'GHC.Generics.NoSourceUnpackedness
            'GHC.Generics.NoSourceStrictness
            'GHC.Generics.DecidedLazy)
         (GHC.Generics.K1 GHC.Generics.R [Data.Text.Internal.Text])
         a1
    -> [(Data.Text.Internal.Text, Data.Aeson.Types.Internal.Value)]
    -> (# (Data.Text.Internal.Text, Data.Aeson.Types.Internal.Value),
          [(Data.Text.Internal.Text, Data.Aeson.Types.Internal.Value)] #)
  {- Arity: 3, Strictness: <L,1*U(1*C1(U),A,A,A,A,A)><L,1*U><L,U>,
     Inline: [0],
     Unfolding: (\ @ a1
                   (w :: Data.Aeson.Types.Internal.Options)
                   (w1 :: GHC.Generics.S1
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "keywords")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R [Data.Text.Internal.Text])
                            a1)
                   (w2 :: [(Data.Text.Internal.Text,
                            Data.Aeson.Types.Internal.Value)]) ->
                 (# (case w of wild { Data.Aeson.Types.Internal.Options ds7 ds8 ds9 ds10 ds11 ds12 ->
                     case ds7 Lib.$fFromJSONKeywords8 of dt1 { DEFAULT ->
                     case GHC.Magic.runRW#
                            @ 'GHC.Types.PtrRepLifted
                            @ Data.Text.Internal.Text
                            (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                             case GHC.Prim.newByteArray#
                                    @ GHC.Prim.RealWorld
                                    10#
                                    s1 of ds13 { (#,#) ipv ipv1 ->
                             Data.Aeson.Types.ToJSON.$wouter4
                               ipv1
                               4#
                               dt1
                               0#
                               ipv }) of ds13 { (#,#) ipv ipv1 ->
                     ipv1 } } },
                     case GHC.Magic.runRW#
                            @ 'GHC.Types.PtrRepLifted
                            @ (Data.Vector.Vector Data.Aeson.Types.Internal.Value)
                            (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                             case GHC.Prim.newArray#
                                    @ Data.Aeson.Types.Internal.Value
                                    @ (Control.Monad.Primitive.PrimState
                                         (GHC.ST.ST GHC.Prim.RealWorld))
                                    0#
                                    (Data.Vector.Mutable.uninitialised
                                       @ Data.Aeson.Types.Internal.Value)
                                    s1
                                      `cast`
                                    (GHC.Prim.State#
                                       (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                 <GHC.Prim.RealWorld>_N)))_R of ds1 { (#,#) ipv ipv1 ->
                             case Lib.$fToJSONKeywords4
                                    GHC.Types.SPEC
                                    ((Data.Vector.Mutable.MVector
                                        @ (Control.Monad.Primitive.PrimState
                                             (GHC.ST.ST GHC.Prim.RealWorld))
                                        @ Data.Aeson.Types.Internal.Value
                                        0#
                                        0#
                                        ipv1)
                                       `cast`
                                     (Sub (Sym (Data.Vector.D:R:MutableVector[0])) <Control.Monad.Primitive.PrimState
                                                                                      (GHC.ST.ST
                                                                                         GHC.Prim.RealWorld)>_N <Data.Aeson.Types.Internal.Value>_N),
                                     Lib.$fToJSONKeywords3)
                                    (GHC.Base.map
                                       @ Data.Text.Internal.Text
                                       @ Data.Aeson.Types.Internal.Value
                                       Data.Aeson.Types.Internal.$WString
                                       w1
                                         `cast`
                                       (Trans
                                            (GHC.Generics.N:M1[0]
                                                 <GHC.Generics.S>_P
                                                 <'GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "keywords")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy>_P
                                                 <GHC.Generics.K1
                                                    GHC.Generics.R
                                                    [Data.Text.Internal.Text]>_R <a1>_N)
                                            (GHC.Generics.N:K1[0]
                                                 <GHC.Generics.R>_P
                                                 <[Data.Text.Internal.Text]>_R
                                                 <a1>_P)))
                                    ipv
                                      `cast`
                                    (GHC.Prim.State#
                                       (Control.Monad.Primitive.D:R:PrimStateST[0]
                                            <GHC.Prim.RealWorld>_N))_R of ds2 { (#,#) ipv6 ipv7 ->
                             case ipv7 of wild5 { (,) v' n ->
                             case v'
                                    `cast`
                                  (Sub (Data.Vector.D:R:MutableVector[0]) <Control.Monad.Primitive.PrimState
                                                                             (GHC.ST.ST
                                                                                GHC.Prim.RealWorld)>_N <Data.Aeson.Types.Internal.Value>_N) of wild { Data.Vector.Mutable.MVector dt dt1 dt2 ->
                             case n of dt5 { GHC.Types.I# dt6 ->
                             case GHC.Prim.unsafeFreezeArray#
                                    @ (Control.Monad.Primitive.PrimState
                                         (GHC.ST.ST GHC.Prim.RealWorld))
                                    @ Data.Aeson.Types.Internal.Value
                                    dt2
                                    ipv6
                                      `cast`
                                    (GHC.Prim.State#
                                       (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                 <GHC.Prim.RealWorld>_N)))_R of ds { (#,#) ipv2 ipv3 ->
                             (# ipv2
                                  `cast`
                                (GHC.Prim.State#
                                   (Control.Monad.Primitive.D:R:PrimStateST[0]
                                        <GHC.Prim.RealWorld>_N))_R,
                                Data.Vector.Vector
                                  @ Data.Aeson.Types.Internal.Value
                                  dt
                                  dt6
                                  ipv3 #) } } } } } }) of ds1 { (#,#) ipv1 ipv2 ->
                     case ipv2 of dt1 { Data.Vector.Vector ipv ipv4 ipv5 ->
                     Data.Aeson.Types.Internal.Array dt1 } }),
                    w2 #)) -}
6e5ba411e2db6ed635d17df556d30bdb
  data Keywords = Keywords {keywords :: [Data.Text.Internal.Text]}
6e5ba411e2db6ed635d17df556d30bdb
  axiom Rep_Keywords::
      GHC.Generics.Rep Lib.Keywords
        = GHC.Generics.D1
            ('GHC.Generics.MetaData
               "Keywords"
               "Lib"
               "arserber-0.1.0.0-JNz71AlQYinIvoesE5TPIM"
               'GHC.Types.False)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "Keywords" 'GHC.Generics.PrefixI 'GHC.Types.True)
               (GHC.Generics.S1
                  ('GHC.Generics.MetaSel
                     ('GHC.Base.Just "keywords")
                     'GHC.Generics.NoSourceUnpackedness
                     'GHC.Generics.NoSourceStrictness
                     'GHC.Generics.DecidedLazy)
                  (GHC.Generics.Rec0 [Data.Text.Internal.Text])))
64e3cfa8e09b6cc9904ef8b09abbe96a
  keywords :: Lib.Keywords -> [Data.Text.Internal.Text]
  RecSel Left Lib.Keywords
  {- Arity: 1, HasNoCafRefs, Strictness: <S(S),1*U(1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Lib.Keywords) ->
                 case ds of wild { Lib.Keywords ds1 -> ds1 }) -}
1d4c3b0ac11550c7c281f9a3eee248f1
  webserver :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Lib.webserver1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
805198edf4f83878e3ca2943979febba
  webserver1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U> -}
instance Data.Aeson.Types.FromJSON.FromJSON [Lib.Keywords]
  = Lib.$fFromJSONKeywords
instance GHC.Generics.Generic [Lib.Keywords]
  = Lib.$fGenericKeywords
instance GHC.Show.Show [Lib.Keywords] = Lib.$fShowKeywords
instance Data.Aeson.Types.ToJSON.ToJSON [Lib.Keywords]
  = Lib.$fToJSONKeywords
family instance GHC.Generics.Rep [Lib.Keywords] = Lib.Rep_Keywords
"SPEC/Lib $fApplicativeResourceT @ IO" [ALWAYS] forall ($dApplicative :: GHC.Base.Applicative
                                                                           GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fApplicativeResourceT @ GHC.Types.IO
                                                               $dApplicative
  = Lib.$s$$+-_$s$fApplicativeResourceT
"SPEC/Lib $fApplicativeResourceT_$cp1Applicative @ IO" [ALWAYS] forall ($dApplicative :: GHC.Base.Applicative
                                                                                           GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fApplicativeResourceT_$cp1Applicative @ GHC.Types.IO
                                                                               $dApplicative
  = Lib.$s$$+-_$s$fApplicativeResourceT_$cp1Applicative
"SPEC/Lib $fApplicativeResourceT_$cpure @ IO" [ALWAYS] forall ($dApplicative :: GHC.Base.Applicative
                                                                                  GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fApplicativeResourceT_$cpure @ GHC.Types.IO
                                                                      $dApplicative
  = Lib.$s$$+-_$s$fApplicativeResourceT_$cpure
"SPEC/Lib $fFromJSON[] @ Text" [ALWAYS] forall ($dFromJSON :: Data.Aeson.Types.FromJSON.FromJSON
                                                                Data.Text.Internal.Text)
  Data.Aeson.Types.FromJSON.$fFromJSON[] @ Data.Text.Internal.Text
                                         $dFromJSON
  = Lib.$fFromJSONKeywords_$s$fFromJSON[]
"SPEC/Lib $fFunctorResourceT @ IO" [ALWAYS] forall ($dFunctor :: GHC.Base.Functor
                                                                   GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fFunctorResourceT @ GHC.Types.IO
                                                           $dFunctor
  = Lib.$s$$+-_$s$fFunctorResourceT
"SPEC/Lib $fMonadBasebResourceT @ IO @ IO" [ALWAYS] forall ($dMonadBase :: Control.Monad.Base.MonadBase
                                                                             GHC.Types.IO
                                                                             GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fMonadBasebResourceT @ GHC.Types.IO
                                                              @ GHC.Types.IO
                                                              $dMonadBase
  = Lib.$s$fMonadBasebResourceT
"SPEC/Lib $fMonadIOResourceT @ IO" [ALWAYS] forall ($dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                   GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fMonadIOResourceT @ GHC.Types.IO
                                                           $dMonadIO
  = Lib.$s$fMonadIOResourceT
"SPEC/Lib $fMonadIOResourceT_$cliftIO @ IO" [ALWAYS] forall ($dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                            GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fMonadIOResourceT_$cliftIO @ GHC.Types.IO
                                                                    $dMonadIO
  = Lib.$s$fMonadBasebResourceT_$s$fMonadIOResourceT_$cliftIO
"SPEC/Lib $fMonadResourceResourceT @ IO" [ALWAYS] forall ($dApplicative :: GHC.Base.Applicative
                                                                             GHC.Types.IO)
                                                         ($dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                         GHC.Types.IO)
                                                         ($dMonadBase :: Control.Monad.Base.MonadBase
                                                                           GHC.Types.IO
                                                                           GHC.Types.IO)
                                                         ($dMonadThrow :: Control.Monad.Catch.MonadThrow
                                                                            GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fMonadResourceResourceT @ GHC.Types.IO
                                                                 $dMonadThrow
                                                                 $dMonadBase
                                                                 $dMonadIO
                                                                 $dApplicative
  = Lib.$s$fMonadResourceResourceT
"SPEC/Lib $fMonadResourceResourceT_$cp1MonadResource @ IO" [ALWAYS] forall ($dApplicative :: GHC.Base.Applicative
                                                                                               GHC.Types.IO)
                                                                           ($dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                                           GHC.Types.IO)
                                                                           ($dMonadBase :: Control.Monad.Base.MonadBase
                                                                                             GHC.Types.IO
                                                                                             GHC.Types.IO)
                                                                           ($dMonadThrow :: Control.Monad.Catch.MonadThrow
                                                                                              GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fMonadResourceResourceT_$cp1MonadResource @ GHC.Types.IO
                                                                                   $dMonadThrow
                                                                                   $dMonadBase
                                                                                   $dMonadIO
                                                                                   $dApplicative
  = Lib.$s$fMonadResourceResourceT_$s$fMonadResourceResourceT_$cp1MonadResource
"SPEC/Lib $fMonadResourceResourceT_$cp2MonadResource @ IO" [ALWAYS] forall ($dApplicative :: GHC.Base.Applicative
                                                                                               GHC.Types.IO)
                                                                           ($dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                                           GHC.Types.IO)
                                                                           ($dMonadBase :: Control.Monad.Base.MonadBase
                                                                                             GHC.Types.IO
                                                                                             GHC.Types.IO)
                                                                           ($dMonadThrow :: Control.Monad.Catch.MonadThrow
                                                                                              GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fMonadResourceResourceT_$cp2MonadResource @ GHC.Types.IO
                                                                                   $dMonadThrow
                                                                                   $dMonadBase
                                                                                   $dMonadIO
                                                                                   $dApplicative
  = Lib.$s$fMonadResourceResourceT_$s$fMonadResourceResourceT_$cp2MonadResource
"SPEC/Lib $fMonadResourceResourceT_$cp4MonadResource @ IO" [ALWAYS] forall ($dApplicative :: GHC.Base.Applicative
                                                                                               GHC.Types.IO)
                                                                           ($dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                                           GHC.Types.IO)
                                                                           ($dMonadBase :: Control.Monad.Base.MonadBase
                                                                                             GHC.Types.IO
                                                                                             GHC.Types.IO)
                                                                           ($dMonadThrow :: Control.Monad.Catch.MonadThrow
                                                                                              GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fMonadResourceResourceT_$cp4MonadResource @ GHC.Types.IO
                                                                                   $dMonadThrow
                                                                                   $dMonadBase
                                                                                   $dMonadIO
                                                                                   $dApplicative
  = Lib.$s$fMonadResourceResourceT_$s$fMonadResourceResourceT_$cp4MonadResource
"SPEC/Lib $fMonadResourceT @ IO" [ALWAYS] forall ($dMonad :: GHC.Base.Monad
                                                               GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fMonadResourceT @ GHC.Types.IO
                                                         $dMonad
  = Lib.$s$$+-_$s$fMonadResourceT
"SPEC/Lib $fMonadResourceT_$cfail @ IO" [ALWAYS] forall ($dMonad :: GHC.Base.Monad
                                                                      GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fMonadResourceT_$cfail @ GHC.Types.IO
                                                                $dMonad
  = Lib.$s$$+-_$s$fMonadResourceT_$cfail
"SPEC/Lib $fMonadResourceT_$cp1Monad @ IO" [ALWAYS] forall ($dMonad :: GHC.Base.Monad
                                                                         GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fMonadResourceT_$cp1Monad @ GHC.Types.IO
                                                                   $dMonad
  = Lib.$s$$+-_$s$fMonadResourceT_$cp1Monad
"SPEC/Lib $fMonadThrowResourceT @ IO" [ALWAYS] forall ($dMonadThrow :: Control.Monad.Catch.MonadThrow
                                                                         GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fMonadThrowResourceT @ GHC.Types.IO
                                                              $dMonadThrow
  = Lib.$s$fMonadResourceResourceT_$s$fMonadThrowResourceT
"SPEC/Lib $fMonadThrowResourceT_$cthrowM @ IO" [ALWAYS] forall ($dMonadThrow :: Control.Monad.Catch.MonadThrow
                                                                                  GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fMonadThrowResourceT_$cthrowM @ GHC.Types.IO
                                                                       $dMonadThrow
  = Lib.$s$fMonadResourceResourceT_$s$fMonadThrowResourceT_$cthrowM
"SPEC/Lib $fSelectorMetaMetaSel @ ('Just
                                    "keywords") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                      'GHC.Generics.DecidedLazy)
                                                                                                                                                                       ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                      'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                       ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                      'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                       ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                     ('GHC.Base.Just
                                                                                                                                                                                        "keywords"))
  GHC.Generics.$fSelectorMetaMetaSel @ ('GHC.Base.Just "keywords")
                                     @ 'GHC.Generics.NoSourceUnpackedness
                                     @ 'GHC.Generics.NoSourceStrictness
                                     @ 'GHC.Generics.DecidedLazy
                                     $dSingI
                                     $dSingI1
                                     $dSingI2
                                     $dSingI3
  = Lib.$fFromJSONKeywords_$s$fSelectorMetaMetaSel
"SPEC/Lib $fSelectorMetaMetaSel_$cselName @ ('Just
                                              "keywords") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                                          'GHC.Generics.DecidedLazy)
                                                                                                                                                                                           ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                                          'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                                           ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                                          'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                                           ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                                         ('GHC.Base.Just
                                                                                                                                                                                                            "keywords"))
  GHC.Generics.$fSelectorMetaMetaSel_$cselName @ ('GHC.Base.Just
                                                    "keywords")
                                               @ 'GHC.Generics.NoSourceUnpackedness
                                               @ 'GHC.Generics.NoSourceStrictness
                                               @ 'GHC.Generics.DecidedLazy
                                               $dSingI
                                               $dSingI1
                                               $dSingI2
                                               $dSingI3
  = Lib.$fFromJSONKeywords_$s$fSelectorMetaMetaSel_$cselName
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

